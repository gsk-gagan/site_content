<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Hey I&#39;m Gagan!</title>
    <link>/</link>
    <description>Recent content on Hey I&#39;m Gagan!</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 01 Jun 2022 11:54:48 -0400</lastBuildDate><atom:link href="/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Chasing Autonomity Part 1 - Hardware Foundations for Reinforcement Learnt Self-balancing Bot</title>
      <link>/post/20220601/</link>
      <pubDate>Wed, 01 Jun 2022 11:54:48 -0400</pubDate>
      
      <guid>/post/20220601/</guid>
      <description>That&amp;rsquo;s It?
The idea is to create a self balancing robot, which should learn to balance itself without explicitly coding in the logic to do so. In a traditional sense we need to apply reinforcement learning model to let the robot train itself. Instead of going into the details of how that can be accomplished, here I lay down the foundations of the hardware setup required to achieve this.
General Hardware Overview On a high level we have the following:</description>
    </item>
    
    <item>
      <title>Triathlon - Slippery Slope?</title>
      <link>/post/20220531/</link>
      <pubDate>Tue, 31 May 2022 20:57:23 -0400</pubDate>
      
      <guid>/post/20220531/</guid>
      <description>Guess I should take a break!
When it comes to Triathlon it adds trice the efforts, maintenance and expenses when compared to an individual sport. And when it comes to performance improvements, Triathletes are infamous for being the most irrational spenders even for marginal gains. Knowing myself being a safe buyer (safe on product, not on money), I tried to be very frugal and not have another needless hole in my pocket (gaming being the first one - I technically have every major gaming console and a bunch of &amp;ldquo;unopened&amp;rdquo; game boxes!</description>
    </item>
    
    <item>
      <title>Experimentation with StyleGAN2 - Projecting real image to artistic deep fake</title>
      <link>/post/20220522/</link>
      <pubDate>Sun, 22 May 2022 23:38:22 -0400</pubDate>
      
      <guid>/post/20220522/</guid>
      <description>Long lost twin!
Overview of GAN - Generative Adversarial Network GANs as the name suggest are generative ML models used to generate artificial content. They&amp;rsquo;re popularly used to generate deep fakes, which are equivalent to real pictures. &amp;ldquo;Adversarial Networks&amp;rdquo; because under the hood they employ two deep neural networks. One network is used to generate deep fakes and the other network (the adversary) is responsible for detecting deep fakes from real images.</description>
    </item>
    
    <item>
      <title>Changing VNC Resolution (Raspberry Pi)</title>
      <link>/post/20220206/</link>
      <pubDate>Sun, 06 Feb 2022 09:53:54 -0500</pubDate>
      
      <guid>/post/20220206/</guid>
      <description>Simple Instructions By default the VNC resolution is not apt. To change it, you can specify configuration in your Raspberry Pi, so that the VNC Viewer will start rendering in that.
To change the resolution do the following in a Terminal running on your Pi (either through ssh or VNC):
 sudo vim /boot/config.txt Then add the following below the # uncomment to force a specific HDMI mode (this will force VGA) line: hdmi_ignore_edid=0xa5000080 hdmi_group=2 hdmi_mode=85   </description>
    </item>
    
    <item>
      <title>Headless Connection to Raspberry Pi Zero 2 W</title>
      <link>/post/20220205/</link>
      <pubDate>Sat, 05 Feb 2022 11:56:02 -0500</pubDate>
      
      <guid>/post/20220205/</guid>
      <description>Getting Started in Headless Mode In headless mode, you are using your wifi enabled Raspberry Pi (Zero 2 W, in this case) without a screen. You will need to ssh into your raspberry pi to start using it. To get started with this you have to:
 Include a blank file named &amp;ldquo;ssh&amp;rdquo; at the root of your pi&amp;rsquo;s sd card (i.e. boot drive). This tells the pi to allow ssh connection at startup.</description>
    </item>
    
    <item>
      <title>Creating a Static Website and Hoisting it on GitHub</title>
      <link>/post/20220202/</link>
      <pubDate>Wed, 02 Feb 2022 22:07:41 -0500</pubDate>
      
      <guid>/post/20220202/</guid>
      <description>Quick Summary So today I was able to launch and host my static website on GitHub and also link it to my custom domain name. The general idea is that by leveraging GitHub I won&amp;rsquo;t have to pay for any web hosting services and also have unlimited bandwidth. This also drastically simplifies having your own website as you no longer have to manage or maintain a server regularly.
The only downside or restriction is that only static websites can be hosted on GitHub.</description>
    </item>
    
    <item>
      <title>About Me!</title>
      <link>/about/</link>
      <pubDate>Wed, 02 Feb 2022 20:18:48 -0500</pubDate>
      
      <guid>/about/</guid>
      <description>If only words could describe! Being cheesey with yourself is one of the easiest ways to enjoy your company!!</description>
    </item>
    
    <item>
      <title>Welcome to My Site!</title>
      <link>/post/first/</link>
      <pubDate>Sat, 01 Jan 2022 20:06:24 -0500</pubDate>
      
      <guid>/post/first/</guid>
      <description>The idea of this site is to keep posting all the things that I do with minimal efforts. I believe I am simply going to keep a log of all the things I do an a regular basis.
I think there&amp;rsquo;ll be a retrospective section as well. But for current phase I will simply reference all my projects since Jan 2022.
*Want to know more about me? Visit About Me.</description>
    </item>
    
  </channel>
</rss>
